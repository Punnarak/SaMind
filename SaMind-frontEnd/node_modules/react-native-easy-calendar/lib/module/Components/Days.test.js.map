{"version":3,"sources":["Days.test.tsx"],"names":["React","dayjs","localizedFormat","render","fireEvent","ThemeContext","DefaultTheme","Days","extend","getDisabledDays","day","props","accessibilityState","disabled","getSelectedDays","selected","getAccessibilityLabel","accessibilityLabel","test","days","DaysPage","expect","component","toBeTruthy","describe","visibleDate","normalDayArray","length","toBe","extraDayArray","onPressDay","jest","fn","randomDay","press","toHaveBeenCalledTimes","dateProperties","selectedDays","filter","isSelected","selectedDayLabels","map","disabledDays","isDisabled","disabledDayLabels","minDate","maxDate","theme","testTheme","toHaveStyle","daysContainer","constructor","showExtraDates","DayComponent","getByTestId","queryAllByTestId","customDayArray","undefined","randomCustomDay","marginTop","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AAGA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,+BAAlC;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,YAAT,QAA6B,WAA7B;AAGA,OAAOC,IAAP,MAA4B,QAA5B;AAEAN,KAAK,CAACO,MAAN,CAAaN,eAAb,E,CAEA;;AAEA,MAAMO,eAAe,GAAIC,GAAD,IACtBA,GAAG,CAACC,KAAJ,CAAUC,kBAAV,CAA6BC,QAD/B;;AAEA,MAAMC,eAAe,GAAIJ,GAAD,IACtBA,GAAG,CAACC,KAAJ,CAAUC,kBAAV,CAA6BG,QAD/B;;AAEA,MAAMC,qBAAqB,GAAIN,GAAD,IAC5BA,GAAG,CAACC,KAAJ,CAAUM,kBADZ;;AAGAC,IAAI,CAAC,4BAAD,EAA+B,MAAM;AACvC,QAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa,EAAb,CAAb;AACAC,EAAAA,MAAM,CAACF,IAAI,CAACG,SAAN,CAAN,CAAuBC,UAAvB;AACD,CAHG,CAAJ;AAKAC,QAAQ,CAAC,2CAAD,EAA8C,MAAM;AAC1DN,EAAAA,IAAI,CAAC,+BAAD,EAAkC,MAAM;AAC1C;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAW,EAAExB,KAAK,CAAC,YAAD;AAApB,KAAb,CAAb;AACAoB,IAAAA,MAAM,CAACF,IAAI,CAACO,cAAL,CAAoBC,MAArB,CAAN,CAAmCC,IAAnC,CAAwC,EAAxC;AACD,GAJG,CAAJ;AAMAV,EAAAA,IAAI,CAAC,+BAAD,EAAkC,MAAM;AAC1C;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAW,EAAExB,KAAK,CAAC,YAAD;AAApB,KAAb,CAAb;AACAoB,IAAAA,MAAM,CAACF,IAAI,CAACO,cAAL,CAAoBC,MAArB,CAAN,CAAmCC,IAAnC,CAAwC,EAAxC;AACD,GAJG,CAAJ;AAMAV,EAAAA,IAAI,CAAC,6BAAD,EAAgC,MAAM;AACxC;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAW,EAAExB,KAAK,CAAC,YAAD;AAApB,KAAb,CAAb;AACAoB,IAAAA,MAAM,CAACF,IAAI,CAACO,cAAL,CAAoBC,MAArB,CAAN,CAAmCC,IAAnC,CAAwC,EAAxC;AACD,GAJG,CAAJ;AAMAV,EAAAA,IAAI,CAAC,iCAAD,EAAoC,MAAM;AAC5C;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAW,EAAExB,KAAK,CAAC,YAAD;AAApB,KAAb,CAAb;AACAoB,IAAAA,MAAM,CAACF,IAAI,CAACO,cAAL,CAAoBC,MAArB,CAAN,CAAmCC,IAAnC,CAAwC,EAAxC;AACD,GAJG,CAAJ;AAKD,CAxBO,CAAR;AA0BAJ,QAAQ,CAAC,sCAAD,EAAyC,MAAM;AACrDN,EAAAA,IAAI,CAAC,0CAAD,EAA6C,MAAM;AACrD;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAW,EAAExB,KAAK,CAAC,YAAD;AAApB,KAAb,CAAb;AACAoB,IAAAA,MAAM,CAACF,IAAI,CAACU,aAAL,CAAmBF,MAApB,CAAN,CAAkCC,IAAlC,CAAuC,EAAvC;AACD,GAJG,CAAJ;AAMAV,EAAAA,IAAI,CAAC,iDAAD,EAAoD,MAAM;AAC5D;AACA,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAW,EAAExB,KAAK,CAAC,YAAD;AAApB,KAAb,CAAb;AACAoB,IAAAA,MAAM,CAACF,IAAI,CAACU,aAAL,CAAmBF,MAApB,CAAN,CAAkCC,IAAlC,CAAuC,EAAvC;AACD,GAJG,CAAJ;AAKD,CAZO,CAAR;AAcAV,IAAI,CAAC,sDAAD,EAAyD,MAAM;AACjE,QAAMY,UAAU,GAAGC,IAAI,CAACC,EAAL,EAAnB;AACA,QAAMb,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEU,IAAAA;AAAF,GAAb,CAAb;AACAX,EAAAA,IAAI,CAACc,SAAL,IAAkB7B,SAAS,CAAC8B,KAAV,CAAgBf,IAAI,CAACc,SAArB,CAAlB;AACAZ,EAAAA,MAAM,CAACS,UAAD,CAAN,CAAmBK,qBAAnB,CAAyC,CAAzC;AACD,CALG,CAAJ;AAOAX,QAAQ,CAAC,0BAAD,EAA6B,MAAM;AACzCN,EAAAA,IAAI,CAAC,eAAD,EAAkB,MAAM;AAC1B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEgB,MAAAA,cAAc,EAAE;AAAlB,KAAb,CAAb;AACA,UAAMC,YAAY,GAAGlB,IAAI,CAACO,cAAL,CAAoBY,MAApB,CAA2BxB,eAA3B,CAArB;AACAO,IAAAA,MAAM,CAACgB,YAAY,CAACV,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACD,GAJG,CAAJ;AAMAV,EAAAA,IAAI,CAAC,qBAAD,EAAwB,MAAM;AAChC,UAAMO,WAAW,GAAGxB,KAAK,CAAC,YAAD,CAAzB;AACA,UAAMmC,cAAc,GAAG;AACrB,oBAAc;AAAEG,QAAAA,UAAU,EAAE;AAAd,OADO;AACe;AACpC,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAFO;AAGrB,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAHO;AAIrB,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAJO;AAKrB,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OALO,CAKe;;AALf,KAAvB;AAQA,UAAMpB,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAF;AAAeW,MAAAA;AAAf,KAAb,CAAb;AACA,UAAMC,YAAY,GAAGlB,IAAI,CAACO,cAAL,CAAoBY,MAApB,CAA2BxB,eAA3B,CAArB;AACA,UAAM0B,iBAAiB,GAAGH,YAAY,CAACI,GAAb,CAAiBzB,qBAAjB,CAA1B;AAEAK,IAAAA,MAAM,CAACgB,YAAY,CAACV,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACAP,IAAAA,MAAM,CAACmB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BZ,IAA7B,CAAkC,iBAAlC;AACAP,IAAAA,MAAM,CAACmB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BZ,IAA7B,CAAkC,kBAAlC;AACAP,IAAAA,MAAM,CAACmB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BZ,IAA7B,CAAkC,kBAAlC;AACD,GAlBG,CAAJ;AAmBD,CA1BO,CAAR;AA4BAJ,QAAQ,CAAC,2BAAD,EAA8B,MAAM;AAC1CN,EAAAA,IAAI,CAAC,eAAD,EAAkB,MAAM;AAC1B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEgB,MAAAA,cAAc,EAAE;AAAlB,KAAb,CAAb;AACA,UAAMM,YAAY,GAAGvB,IAAI,CAACO,cAAL,CAAoBY,MAApB,CAA2B7B,eAA3B,CAArB;AACAY,IAAAA,MAAM,CAACqB,YAAY,CAACf,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACD,GAJG,CAAJ;AAMAV,EAAAA,IAAI,CAAC,eAAD,EAAkB,MAAM;AAC1B,UAAMO,WAAW,GAAGxB,KAAK,CAAC,YAAD,CAAzB;AACA,UAAMmC,cAAc,GAAG;AACrB,oBAAc;AAAEO,QAAAA,UAAU,EAAE;AAAd,OADO;AACe;AACpC,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAFO;AAGrB,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAHO;AAIrB,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OAJO;AAKrB,oBAAc;AAAEA,QAAAA,UAAU,EAAE;AAAd,OALO,CAKe;;AALf,KAAvB;AAQA,UAAMxB,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAF;AAAeW,MAAAA;AAAf,KAAb,CAAb;AACA,UAAMM,YAAY,GAAGvB,IAAI,CAACO,cAAL,CAAoBY,MAApB,CAA2B7B,eAA3B,CAArB;AACA,UAAMmC,iBAAiB,GAAGF,YAAY,CAACD,GAAb,CAAiBzB,qBAAjB,CAA1B;AAEAK,IAAAA,MAAM,CAACqB,YAAY,CAACf,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,iBAAlC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,kBAAlC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,kBAAlC;AACD,GAlBG,CAAJ;AAoBAV,EAAAA,IAAI,CAAC,gCAAD,EAAmC,MAAM;AAC3C,UAAMO,WAAW,GAAGxB,KAAK,CAAC,YAAD,CAAzB;AACA,UAAM4C,OAAO,GAAG,YAAhB,CAF2C,CAEb;;AAC9B,UAAM1B,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAF;AAAeoB,MAAAA;AAAf,KAAb,CAAb;AACA,UAAMH,YAAY,GAAGvB,IAAI,CAACO,cAAL,CAAoBY,MAApB,CAA2B7B,eAA3B,CAArB;AACA,UAAMmC,iBAAiB,GAAGF,YAAY,CAACD,GAAb,CAAiBzB,qBAAjB,CAA1B;AAEAK,IAAAA,MAAM,CAACqB,YAAY,CAACf,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,iBAAlC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,iBAAlC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,iBAAlC;AACD,GAXG,CAAJ;AAaAV,EAAAA,IAAI,CAAC,+BAAD,EAAkC,MAAM;AAC1C,UAAMO,WAAW,GAAGxB,KAAK,CAAC,YAAD,CAAzB;AACA,UAAM6C,OAAO,GAAG,YAAhB,CAF0C,CAEZ;;AAC9B,UAAM3B,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAEK,MAAAA,WAAF;AAAeqB,MAAAA;AAAf,KAAb,CAAb;AACA,UAAMJ,YAAY,GAAGvB,IAAI,CAACO,cAAL,CAAoBY,MAApB,CAA2B7B,eAA3B,CAArB;AACA,UAAMmC,iBAAiB,GAAGF,YAAY,CAACD,GAAb,CAAiBzB,qBAAjB,CAA1B;AAEAK,IAAAA,MAAM,CAACqB,YAAY,CAACf,MAAd,CAAN,CAA4BC,IAA5B,CAAiC,CAAjC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,kBAAlC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,kBAAlC;AACAP,IAAAA,MAAM,CAACuB,iBAAiB,CAAC,CAAD,CAAlB,CAAN,CAA6BhB,IAA7B,CAAkC,kBAAlC;AACD,GAXG,CAAJ;AAYD,CApDO,CAAR;AAsDAJ,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9BN,EAAAA,IAAI,CAAC,4CAAD,EAA+C,MAAM;AACvD,UAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAa;AAAE2B,MAAAA,KAAK,EAAEC;AAAT,KAAb,CAAb;AACA3B,IAAAA,MAAM,CAACF,IAAI,CAACG,SAAN,CAAN,CAAuB2B,WAAvB,CAAmCD,SAAS,CAACE,aAA7C;AACD,GAHG,CAAJ;AAID,CALO,CAAR;;AAOA,MAAM9B,QAAN,CAAe;AAQb+B,EAAAA,WAAW,CAAC;AACV1B,IAAAA,WAAW,GAAGxB,KAAK,CAAC,YAAD,CADT;AAEVmD,IAAAA,cAAc,GAAG,KAFP;AAGVtB,IAAAA,UAAU,GAAG,MAAM,CAAE,CAHX;AAIVM,IAAAA,cAAc,GAAG,EAJP;AAKVW,IAAAA,KAAK,GAAGzC,YALE;AAMVuC,IAAAA,OANU;AAOVC,IAAAA,OAPU;AAQVO,IAAAA;AARU,GAAD,EAS4B;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACrC,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAoCpD,MAAM,eAC9C,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE4C;AAA9B,oBACE,oBAAC,IAAD,EACM;AACFF,MAAAA,OADE;AAEFC,MAAAA,OAFE;AAGFrB,MAAAA,WAHE;AAIF2B,MAAAA,cAJE;AAKFtB,MAAAA,UALE;AAMFM,MAAAA,cANE;AAOFiB,MAAAA;AAPE,KADN,CADF,CAD8C,CAAhD;AAgBA,SAAK/B,SAAL,GAAiBgC,WAAW,CAAC,gBAAD,CAA5B;AACA,SAAK5B,cAAL,GAAsB6B,gBAAgB,CAAC,eAAD,CAAtC;AACA,SAAK1B,aAAL,GAAqB0B,gBAAgB,CAAC,qBAAD,CAArC;AACA,SAAKC,cAAL,GAAsBD,gBAAgB,CAAC,YAAD,CAAtC;AAEA,SAAKtB,SAAL,GAAiB,KAAKP,cAAL,CAAoBC,MAApB,GAA6B,KAAKD,cAAL,CAAoB,CAApB,CAA7B,GAAsD+B,SAAvE;AACA,SAAKC,eAAL,GAAuB,KAAKF,cAAL,CAAoB7B,MAApB,GAA6B,KAAK6B,cAAL,CAAoB,CAApB,CAA7B,GAAsDC,SAA7E;AACD;;AAzCY;;AA4Cf,MAAMT,SAAS,GAAG,EAChB,GAAG1C,YADa;AAEhB4C,EAAAA,aAAa,EAAE;AACbS,IAAAA,SAAS,EAAE,EADE;AAEbC,IAAAA,eAAe,EAAE;AAFJ;AAFC,CAAlB","sourcesContent":["import React from 'react';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\n\nimport type { ReactTestInstance } from 'react-test-renderer';\nimport { render, fireEvent } from '@testing-library/react-native';\n\nimport { ThemeContext } from '../Contexts';\nimport { DefaultTheme } from '../Themes';\nimport type { Theme } from '../Entities';\n\nimport Days, { Props } from './Days';\n\ndayjs.extend(localizedFormat);\n\n// import { DayComponentType } from '../Entities';\n\nconst getDisabledDays = (day: ReactTestInstance): boolean =>\n  day.props.accessibilityState.disabled;\nconst getSelectedDays = (day: ReactTestInstance): boolean =>\n  day.props.accessibilityState.selected;\nconst getAccessibilityLabel = (day: ReactTestInstance): string =>\n  day.props.accessibilityLabel;\n\ntest('Days renders without error', () => {\n  const days = new DaysPage({});\n  expect(days.component).toBeTruthy();\n});\n\ndescribe('Renders the correct number of normal days', () => {\n  test('works for months with 31 days', () => {\n    // January 2020 had 31 days\n    const days = new DaysPage({ visibleDate: dayjs('2020-01-01') });\n    expect(days.normalDayArray.length).toBe(31);\n  });\n\n  test('works for months with 30 days', () => {\n    // April 2020 had 30 days\n    const days = new DaysPage({ visibleDate: dayjs('2020-04-01') });\n    expect(days.normalDayArray.length).toBe(30);\n  });\n\n  test('works for leap-year Febuary', () => {\n    // Febuary 2020 had 29 days\n    const days = new DaysPage({ visibleDate: dayjs('2020-02-01') });\n    expect(days.normalDayArray.length).toBe(29);\n  });\n\n  test('works for non-leap-year Febuary', () => {\n    // February 2019 had 28 days\n    const days = new DaysPage({ visibleDate: dayjs('2019-02-01') });\n    expect(days.normalDayArray.length).toBe(28);\n  });\n});\n\ndescribe('Renders correct number of extra days', () => {\n  test('works with months that need an extra row', () => {\n    // January 2020 needs a final padding row\n    const days = new DaysPage({ visibleDate: dayjs('2020-01-01') });\n    expect(days.extraDayArray.length).toBe(11);\n  });\n\n  test('works with months that do not need an extra row', () => {\n    // May 2020 does not need a final padding row\n    const days = new DaysPage({ visibleDate: dayjs('2020-05-01') });\n    expect(days.extraDayArray.length).toBe(11);\n  });\n});\n\ntest('Component passes onPressDay callback to Day children', () => {\n  const onPressDay = jest.fn();\n  const days = new DaysPage({ onPressDay });\n  days.randomDay && fireEvent.press(days.randomDay);\n  expect(onPressDay).toHaveBeenCalledTimes(1);\n});\n\ndescribe('Selects the correct days', () => {\n  test('none selected', () => {\n    const days = new DaysPage({ dateProperties: {} });\n    const selectedDays = days.normalDayArray.filter(getSelectedDays);\n    expect(selectedDays.length).toBe(0);\n  });\n\n  test('date selection mode', () => {\n    const visibleDate = dayjs('2020-01-01');\n    const dateProperties = {\n      '2019-01-01': { isSelected: true }, // same month of last year, is not rendered\n      '2020-01-05': { isSelected: true },\n      '2020-01-15': { isSelected: true },\n      '2020-01-31': { isSelected: true },\n      '2020-02-01': { isSelected: true }, // next month, is not rendered\n    };\n\n    const days = new DaysPage({ visibleDate, dateProperties });\n    const selectedDays = days.normalDayArray.filter(getSelectedDays);\n    const selectedDayLabels = selectedDays.map(getAccessibilityLabel);\n\n    expect(selectedDays.length).toBe(3);\n    expect(selectedDayLabels[0]).toBe('January 5, 2020');\n    expect(selectedDayLabels[1]).toBe('January 15, 2020');\n    expect(selectedDayLabels[2]).toBe('January 31, 2020');\n  });\n});\n\ndescribe('Disables the correct days', () => {\n  test('none disabled', () => {\n    const days = new DaysPage({ dateProperties: {} });\n    const disabledDays = days.normalDayArray.filter(getDisabledDays);\n    expect(disabledDays.length).toBe(0);\n  });\n\n  test('some disabled', () => {\n    const visibleDate = dayjs('2020-01-01');\n    const dateProperties = {\n      '2019-01-01': { isDisabled: true }, // same month of last year, is not rendered\n      '2020-01-05': { isDisabled: true },\n      '2020-01-15': { isDisabled: true },\n      '2020-01-31': { isDisabled: true },\n      '2020-02-01': { isDisabled: true }, // next month, is not rendered\n    };\n\n    const days = new DaysPage({ visibleDate, dateProperties });\n    const disabledDays = days.normalDayArray.filter(getDisabledDays);\n    const disabledDayLabels = disabledDays.map(getAccessibilityLabel);\n\n    expect(disabledDays.length).toBe(3);\n    expect(disabledDayLabels[0]).toBe('January 5, 2020');\n    expect(disabledDayLabels[1]).toBe('January 15, 2020');\n    expect(disabledDayLabels[2]).toBe('January 31, 2020');\n  });\n\n  test('Disables dates before min date', () => {\n    const visibleDate = dayjs('2020-01-01');\n    const minDate = '2020-01-04'; // 1-3 should be disabled\n    const days = new DaysPage({ visibleDate, minDate });\n    const disabledDays = days.normalDayArray.filter(getDisabledDays);\n    const disabledDayLabels = disabledDays.map(getAccessibilityLabel);\n\n    expect(disabledDays.length).toBe(3);\n    expect(disabledDayLabels[0]).toBe('January 1, 2020');\n    expect(disabledDayLabels[1]).toBe('January 2, 2020');\n    expect(disabledDayLabels[2]).toBe('January 3, 2020');\n  });\n\n  test('Disables dates after max date', () => {\n    const visibleDate = dayjs('2020-01-01');\n    const maxDate = '2020-01-28'; // 29-31 should be disabled\n    const days = new DaysPage({ visibleDate, maxDate });\n    const disabledDays = days.normalDayArray.filter(getDisabledDays);\n    const disabledDayLabels = disabledDays.map(getAccessibilityLabel);\n\n    expect(disabledDays.length).toBe(3);\n    expect(disabledDayLabels[0]).toBe('January 29, 2020');\n    expect(disabledDayLabels[1]).toBe('January 30, 2020');\n    expect(disabledDayLabels[2]).toBe('January 31, 2020');\n  });\n});\n\ndescribe('Theme context', () => {\n  test('Days container applies daysContainer theme', () => {\n    const days = new DaysPage({ theme: testTheme });\n    expect(days.component).toHaveStyle(testTheme.daysContainer);\n  });\n});\n\nclass DaysPage {\n  component: ReactTestInstance;\n  randomDay?: ReactTestInstance;\n  randomCustomDay?: ReactTestInstance;\n  normalDayArray: ReactTestInstance[];\n  extraDayArray: ReactTestInstance[];\n  customDayArray: ReactTestInstance[];\n\n  constructor({\n    visibleDate = dayjs('2020-01-01'),\n    showExtraDates = false,\n    onPressDay = () => {},\n    dateProperties = {},\n    theme = DefaultTheme,\n    minDate,\n    maxDate,\n    DayComponent,\n  }: Partial<Props> & { theme?: Theme }) {\n    const { getByTestId, queryAllByTestId } = render(\n      <ThemeContext.Provider value={theme}>\n        <Days\n          {...{\n            minDate,\n            maxDate,\n            visibleDate,\n            showExtraDates,\n            onPressDay,\n            dateProperties,\n            DayComponent,\n          }}\n        />\n      </ThemeContext.Provider>\n    );\n\n    this.component = getByTestId('days-container');\n    this.normalDayArray = queryAllByTestId('day-container');\n    this.extraDayArray = queryAllByTestId('extra-day-container');\n    this.customDayArray = queryAllByTestId('custom-day');\n\n    this.randomDay = this.normalDayArray.length ? this.normalDayArray[0] : undefined;\n    this.randomCustomDay = this.customDayArray.length ? this.customDayArray[0] : undefined;\n  }\n}\n\nconst testTheme = {\n  ...DefaultTheme,\n  daysContainer: {\n    marginTop: 10,\n    backgroundColor: 'black',\n  },\n};\n"]}