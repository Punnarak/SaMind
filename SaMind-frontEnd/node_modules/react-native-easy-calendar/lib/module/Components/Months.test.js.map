{"version":3,"sources":["Months.test.tsx"],"names":["React","dayjs","TouchableOpacity","Text","fireEvent","render","ThemeContext","DefaultTheme","Months","getDisabledMonths","month","props","accessibilityState","disabled","getSelectedMonths","selected","test","months","MonthsPage","expect","component","toBeTruthy","monthArray","length","toBe","onPressMonth","jest","fn","firstMonth","press","toHaveBeenCalledTimes","describe","dateProperties","selectedMonths","filter","isSelected","toHaveTextContent","minDate","disabledMonths","maxDate","theme","testTheme","toHaveStyle","monthsContainer","MonthComponent","date","onPress","isDisabled","format","firstCustomMonth","customMonthArray","constructor","visibleDate","getAllByRole","getByTestId","getAllByTestId","undefined","marginTop","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dayjs from 'dayjs';\nimport { TouchableOpacity, Text } from 'react-native';\nimport { fireEvent, render } from '@testing-library/react-native';\nimport type { ReactTestInstance } from 'react-test-renderer';\n\nimport { ThemeContext } from '../Contexts';\nimport { DefaultTheme } from '../Themes';\nimport type { Theme, MonthComponentType } from '../Entities';\n\nimport Months, { Props } from './Months';\n\nconst getDisabledMonths = (month: ReactTestInstance) =>\n  month.props.accessibilityState.disabled;\nconst getSelectedMonths = (month: ReactTestInstance) =>\n  month.props.accessibilityState.selected;\n\ntest('Months renders without error', () => {\n  const months = new MonthsPage({});\n  expect(months.component).toBeTruthy();\n});\n\ntest('Renders the correct number of months', () => {\n  const months = new MonthsPage({});\n  expect(months.monthArray.length).toBe(12);\n});\n\ntest('Component passes onPressMonth callback to Month children', () => {\n  const onPressMonth = jest.fn();\n  const months = new MonthsPage({ onPressMonth });\n  months.firstMonth && fireEvent.press(months.firstMonth);\n  expect(onPressMonth).toHaveBeenCalledTimes(1);\n});\n\ndescribe('Generates correct set of selected months', () => {\n  test('None selected, undefined', () => {\n    const months = new MonthsPage({ dateProperties: {} });\n    const selectedMonths = months.monthArray.filter(getSelectedMonths);\n    expect(selectedMonths.length).toBe(0);\n  });\n\n  test('None selected, false', () => {\n    const months = new MonthsPage({\n      dateProperties: {\n        '2020-04-01': { isSelected: false },\n      },\n    });\n    const selectedMonths = months.monthArray.filter(getSelectedMonths);\n    expect(selectedMonths.length).toBe(0);\n  });\n\n  test('Date selection', () => {\n    const dateProperties = {\n      '2019-01-01': { isSelected: true },\n      '2020-01-01': { isSelected: true },\n      '2020-01-05': { isSelected: true },\n      '2020-04-23': { isSelected: true },\n    };\n\n    const months = new MonthsPage({ dateProperties });\n    const selectedMonths = months.monthArray.filter(getSelectedMonths);\n    expect(selectedMonths.length).toBe(2);\n    expect(selectedMonths[0]).toHaveTextContent('Jan');\n    expect(selectedMonths[1]).toHaveTextContent('Apr');\n  });\n});\n\ndescribe('Disables the correct months', () => {\n  describe('due to min date', () => {\n    test('works for start-of-year date', () => {\n      const months = new MonthsPage({ minDate: '2020-01-01' });\n      const disabledMonths = months.monthArray.filter(getDisabledMonths);\n      expect(disabledMonths.length).toBe(0);\n    });\n\n    test('works for middle-of-the-year dates', () => {\n      const months = new MonthsPage({ minDate: '2020-04-01' });\n      const disabledMonths = months.monthArray.filter(getDisabledMonths);\n      expect(disabledMonths.length).toBe(3);\n      expect(disabledMonths[0]).toHaveTextContent('Jan');\n      expect(disabledMonths[1]).toHaveTextContent('Feb');\n      expect(disabledMonths[2]).toHaveTextContent('Mar');\n    });\n\n    test('works for end-of-year date', () => {\n      const months = new MonthsPage({ minDate: '2020-12-31' });\n      const disabledMonths = months.monthArray.filter(getDisabledMonths);\n      expect(disabledMonths.length).toBe(11);\n    });\n  });\n\n  describe('due to max date', () => {\n    test('works for start-of-year date', () => {\n      const months = new MonthsPage({ maxDate: '2020-01-01' });\n      const disabledMonths = months.monthArray.filter(getDisabledMonths);\n      expect(disabledMonths.length).toBe(11);\n    });\n\n    test('works for middle-of-the-year date', () => {\n      const months = new MonthsPage({ maxDate: '2020-10-15' });\n      const disabledMonths = months.monthArray.filter(getDisabledMonths);\n      expect(disabledMonths.length).toBe(2);\n      expect(disabledMonths[0]).toHaveTextContent('Nov');\n      expect(disabledMonths[1]).toHaveTextContent('Dec');\n    });\n\n    test('works for end-of-year date', () => {\n      const months = new MonthsPage({ maxDate: '2020-12-31' });\n      const disabledMonths = months.monthArray.filter(getDisabledMonths);\n      expect(disabledMonths.length).toBe(0);\n    });\n  });\n});\n\ndescribe('Theme context', () => {\n  test('Months container applies monthsContainer theme', () => {\n    const months = new MonthsPage({ theme: testTheme });\n    expect(months.component).toHaveStyle(testTheme.monthsContainer);\n  });\n});\n\ndescribe('Custom month component', () => {\n  const MonthComponent: MonthComponentType = ({\n    date,\n    onPress,\n    isSelected,\n    isDisabled,\n  }) => (\n    <TouchableOpacity\n      testID={'custom-month'}\n      accessibilityState={{ disabled: isDisabled, selected: isSelected }}\n      onPress={() => onPress(date)}>\n      <Text>{dayjs(date).format('MMM')}</Text>\n    </TouchableOpacity>\n  );\n\n  test('custom month receives onPress prop', () => {\n    const onPressMonth = jest.fn();\n    const months = new MonthsPage({ MonthComponent, onPressMonth });\n    months.firstCustomMonth && fireEvent.press(months.firstCustomMonth);\n    expect(onPressMonth).toHaveBeenCalledTimes(1);\n  });\n\n  describe('custom month receives isSelected prop', () => {\n    test('None selected', () => {\n      const months = new MonthsPage({ MonthComponent, dateProperties: {} });\n      const selectedMonths = months.customMonthArray.filter(getSelectedMonths);\n      expect(selectedMonths.length).toBe(0);\n    });\n\n    test('Date selection', () => {\n      const dateProperties = {\n        '2019-01-01': { isSelected: true },\n        '2020-01-01': { isSelected: true },\n        '2020-01-05': { isSelected: true },\n        '2020-04-23': { isSelected: true },\n      };\n\n      const months = new MonthsPage({ MonthComponent, dateProperties });\n      const selectedMonths = months.customMonthArray.filter(getSelectedMonths);\n      expect(selectedMonths.length).toBe(2);\n    });\n  });\n\n  describe('custom month component receives isDisabled prop', () => {\n    describe('disable months due to min date', () => {\n      test('works for start-of-year date', () => {\n        const minDate = '2020-01-01';\n        const months = new MonthsPage({ MonthComponent, minDate });\n        const disabledMonths = months.customMonthArray.filter(getDisabledMonths);\n        expect(disabledMonths.length).toBe(0);\n      });\n\n      test('works for middle-of-the-year dates', () => {\n        const minDate = '2020-04-01';\n        const months = new MonthsPage({ MonthComponent, minDate });\n        const disabledMonths = months.customMonthArray.filter(getDisabledMonths);\n        expect(disabledMonths.length).toBe(3);\n      });\n\n      test('works for end-of-year date', () => {\n        const minDate = '2020-12-31';\n        const months = new MonthsPage({ MonthComponent, minDate });\n        const disabledMonths = months.customMonthArray.filter(getDisabledMonths);\n        expect(disabledMonths.length).toBe(11);\n      });\n    });\n\n    describe('disable months due to max date', () => {\n      test('works for start-of-year date', () => {\n        const maxDate = '2020-01-01';\n        const months = new MonthsPage({ MonthComponent, maxDate });\n        const disabledMonths = months.customMonthArray.filter(getDisabledMonths);\n        expect(disabledMonths.length).toBe(11);\n      });\n\n      test('works for middle-of-the-year dates', () => {\n        const maxDate = '2020-10-15';\n        const months = new MonthsPage({ MonthComponent, maxDate });\n        const disabledMonths = months.customMonthArray.filter(getDisabledMonths);\n        expect(disabledMonths.length).toBe(2);\n      });\n\n      test('works for end-of-year date', () => {\n        const maxDate = '2020-12-31';\n        const months = new MonthsPage({ MonthComponent, maxDate });\n        const disabledMonths = months.customMonthArray.filter(getDisabledMonths);\n        expect(disabledMonths.length).toBe(0);\n      });\n    });\n  });\n});\n\nexport class MonthsPage {\n  component: ReactTestInstance;\n  firstMonth?: ReactTestInstance;\n  firstCustomMonth?: ReactTestInstance;\n  monthArray: ReactTestInstance[];\n  customMonthArray: ReactTestInstance[];\n\n  constructor({\n    onPressMonth = () => {},\n    dateProperties = {},\n    visibleDate = dayjs('2020-05-01'),\n    MonthComponent,\n    minDate,\n    maxDate,\n    theme = DefaultTheme,\n  }: Partial<Props> & { theme?: Theme }) {\n    const { getAllByRole, getByTestId, getAllByTestId } = render(\n      <ThemeContext.Provider value={theme}>\n        <Months\n          {...{\n            MonthComponent,\n            onPressMonth,\n            dateProperties,\n            visibleDate,\n            minDate,\n            maxDate,\n          }}\n        />\n      </ThemeContext.Provider>\n    );\n\n    this.component = getByTestId('months-container');\n    this.monthArray = !MonthComponent ? getAllByRole('button') : [];\n    this.customMonthArray = MonthComponent ? getAllByTestId('custom-month') : [];\n\n    this.firstMonth = this.monthArray.length ? this.monthArray[0] : undefined;\n    this.firstCustomMonth = this.customMonthArray.length\n      ? this.customMonthArray[0]\n      : undefined;\n  }\n}\n\nexport const testTheme = {\n  ...DefaultTheme,\n  monthsContainer: {\n    marginTop: 10,\n    backgroundColor: 'black',\n  },\n};\n"]}