{"version":3,"sources":["Day.tsx"],"names":["dayjs","extend","localizedFormat","Day","date","onPress","showExtraDates","isDisabled","isSelected","isStartOfWeek","isEndOfWeek","isStartOfMonth","isEndOfMonth","isExtraDay","theme","React","useContext","ThemeContext","_onPress","format","disabled","selected","normalDayContainer","extraDayContainer","normalDayText","extraDayText","disabledDayContainer","selectedDayContainer","startOfWeekDayContainer","endOfWeekDayContainer","startOfMonthDayContainer","endOfMonthDayContainer","disabledDayText","selectedDayText","startOfWeekDayText","endOfWeekDayText","startOfMonthDayText","endOfMonthDayText","memo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;;;AAEAA,eAAMC,MAAN,CAAaC,wBAAb;;AAeA,MAAMC,GAAoB,GAAG,CAAC;AAC5BC,EAAAA,IAD4B;AAE5BC,EAAAA,OAF4B;AAG5BC,EAAAA,cAAc,GAAG,KAHW;AAI5BC,EAAAA,UAAU,GAAG,KAJe;AAK5BC,EAAAA,UAAU,GAAG,KALe;AAM5BC,EAAAA,aAAa,GAAG,KANY;AAO5BC,EAAAA,WAAW,GAAG,KAPc;AAQ5BC,EAAAA,cAAc,GAAG,KARW;AAS5BC,EAAAA,YAAY,GAAG,KATa;AAU5BC,EAAAA,UAAU,GAAG;AAVe,CAAD,KAWvB;AACJ,QAAMC,KAAK,GAAGC,eAAMC,UAAN,CAAwBC,sBAAxB,CAAd;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACrBb,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,MAAIS,UAAJ,EAAgB;AACd,wBACE,6BAAC,6BAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,MAAM,EAAE,qBAFV;AAGE,MAAA,kBAAkB,YAAK,oBAAMT,IAAN,EAAYe,MAAZ,CAAmB,IAAnB,CAAL,CAHpB;AAIE,MAAA,kBAAkB,EAAE;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAJtB;AAKE,MAAA,OAAO,EAAEH,QALX;AAME,MAAA,KAAK,EAAE,CAACJ,KAAK,CAACQ,kBAAP,EAA2BR,KAAK,CAACS,iBAAjC;AANT,oBAOE,6BAAC,iBAAD;AAAM,MAAA,MAAM,EAAE,gBAAd;AAAgC,MAAA,KAAK,EAAE,CAACT,KAAK,CAACU,aAAP,EAAsBV,KAAK,CAACW,YAA5B;AAAvC,OACGnB,cAAc,IAAI,oBAAMF,IAAN,EAAYA,IAAZ,EADrB,CAPF,CADF;AAaD;;AAED,sBACE,6BAAC,6BAAD;AACE,IAAA,MAAM,EAAE,eADV;AAEE,IAAA,kBAAkB,YAAK,oBAAMA,IAAN,EAAYe,MAAZ,CAAmB,IAAnB,CAAL,CAFpB;AAGE,IAAA,kBAAkB,EAAE;AAClBC,MAAAA,QAAQ,EAAE,CAAC,EAAEb,UAAU,IAAIM,UAAhB,CADO;AAElBQ,MAAAA,QAAQ,EAAEb;AAFQ,KAHtB;AAOE,IAAA,QAAQ,EAAED,UAAU,IAAIM,UAP1B;AAQE,IAAA,OAAO,EAAEK,QARX;AASE,IAAA,KAAK,EAAE,CACLJ,KAAK,CAACQ,kBADD,EAELf,UAAU,IAAIO,KAAK,CAACY,oBAFf,EAGLlB,UAAU,IAAIM,KAAK,CAACa,oBAHf,EAILlB,aAAa,IAAIK,KAAK,CAACc,uBAJlB,EAKLlB,WAAW,IAAII,KAAK,CAACe,qBALhB,EAMLlB,cAAc,IAAIG,KAAK,CAACgB,wBANnB,EAOLlB,YAAY,IAAIE,KAAK,CAACiB,sBAPjB;AATT,kBAkBE,6BAAC,iBAAD;AACE,IAAA,MAAM,EAAE,UADV;AAEE,IAAA,KAAK,EAAE,CACLjB,KAAK,CAACU,aADD,EAELjB,UAAU,IAAIO,KAAK,CAACkB,eAFf,EAGLxB,UAAU,IAAIM,KAAK,CAACmB,eAHf,EAILxB,aAAa,IAAIK,KAAK,CAACoB,kBAJlB,EAKLxB,WAAW,IAAII,KAAK,CAACqB,gBALhB,EAMLxB,cAAc,IAAIG,KAAK,CAACsB,mBANnB,EAOLxB,YAAY,IAAIE,KAAK,CAACuB,iBAPjB;AAFT,WAWI,oBAAMjC,IAAN,EAAYA,IAAZ,EAXJ,CAlBF,CADF;AAkCD,CAnED;;4BAqEeW,eAAMuB,IAAN,CAAWnC,GAAX,C","sourcesContent":["import React from 'react';\nimport dayjs from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\n\nimport { Text, TouchableOpacity } from 'react-native';\nimport type { DateProperties, Theme } from '../Entities';\nimport { ThemeContext } from '../Contexts';\n\ndayjs.extend(localizedFormat);\n\ninterface OtherProps {\n  date: string;\n  onPress: (date: string) => void;\n  isStartOfWeek?: boolean;\n  isEndOfWeek?: boolean;\n  isStartOfMonth?: boolean;\n  isEndOfMonth?: boolean;\n  isExtraDay?: boolean;\n  showExtraDates?: boolean;\n}\n\nexport type Props = DateProperties & OtherProps;\n\nconst Day: React.FC<Props> = ({\n  date,\n  onPress,\n  showExtraDates = false,\n  isDisabled = false,\n  isSelected = false,\n  isStartOfWeek = false,\n  isEndOfWeek = false,\n  isStartOfMonth = false,\n  isEndOfMonth = false,\n  isExtraDay = false,\n}) => {\n  const theme = React.useContext<Theme>(ThemeContext);\n  const _onPress = () => {\n    onPress(date);\n  };\n\n  if (isExtraDay) {\n    return (\n      <TouchableOpacity\n        disabled\n        testID={'extra-day-container'}\n        accessibilityLabel={`${dayjs(date).format('LL')}`}\n        accessibilityState={{ disabled: true, selected: false }}\n        onPress={_onPress}\n        style={[theme.normalDayContainer, theme.extraDayContainer]}>\n        <Text testID={'extra-day-text'} style={[theme.normalDayText, theme.extraDayText]}>\n          {showExtraDates && dayjs(date).date()}\n        </Text>\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <TouchableOpacity\n      testID={'day-container'}\n      accessibilityLabel={`${dayjs(date).format('LL')}`}\n      accessibilityState={{\n        disabled: !!(isDisabled || isExtraDay),\n        selected: isSelected,\n      }}\n      disabled={isDisabled || isExtraDay}\n      onPress={_onPress}\n      style={[\n        theme.normalDayContainer,\n        isDisabled && theme.disabledDayContainer,\n        isSelected && theme.selectedDayContainer,\n        isStartOfWeek && theme.startOfWeekDayContainer,\n        isEndOfWeek && theme.endOfWeekDayContainer,\n        isStartOfMonth && theme.startOfMonthDayContainer,\n        isEndOfMonth && theme.endOfMonthDayContainer,\n      ]}>\n      <Text\n        testID={'day-text'}\n        style={[\n          theme.normalDayText,\n          isDisabled && theme.disabledDayText,\n          isSelected && theme.selectedDayText,\n          isStartOfWeek && theme.startOfWeekDayText,\n          isEndOfWeek && theme.endOfWeekDayText,\n          isStartOfMonth && theme.startOfMonthDayText,\n          isEndOfMonth && theme.endOfMonthDayText,\n        ]}>\n        \b{dayjs(date).date()}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(Day);\n"]}