{"version":3,"sources":["useSurroundingTimeUnits.test.ts"],"names":["test","result","rerender","visibleDate","initialProps","expect","current","month","start","isSame","toBe","end","last","next"],"mappings":"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","sourcesContent":["import { renderHook } from '@testing-library/react-hooks';\nimport useSurroundingTimeUnits from './useSurroundingTimeUnits';\n\ntest('Should return surrounding time units', () => {\n  const { result, rerender } = renderHook(\n    ({ visibleDate }) => useSurroundingTimeUnits(visibleDate),\n    {\n      initialProps: {\n        visibleDate: '2020-01-06',\n      },\n    }\n  );\n\n  expect(result.current.month.current.start.isSame('2020-01-01', 'day')).toBe(true);\n  expect(result.current.month.current.end.isSame('2020-01-31', 'day')).toBe(true);\n  expect(result.current.month.last.start.isSame('2019-12-01', 'day')).toBe(true);\n  expect(result.current.month.last.end.isSame('2019-12-31', 'day')).toBe(true);\n  expect(result.current.month.next.start.isSame('2020-02-01', 'day')).toBe(true);\n  expect(result.current.month.next.end.isSame('2020-02-29', 'day')).toBe(true);\n\n  rerender({\n    visibleDate: '2020-01-01',\n  });\n\n  expect(result.current.month.current.start.isSame('2020-01-01', 'day')).toBe(true);\n  expect(result.current.month.current.end.isSame('2020-01-31', 'day')).toBe(true);\n  expect(result.current.month.last.start.isSame('2019-12-01', 'day')).toBe(true);\n  expect(result.current.month.last.end.isSame('2019-12-31', 'day')).toBe(true);\n  expect(result.current.month.next.start.isSame('2020-02-01', 'day')).toBe(true);\n  expect(result.current.month.next.end.isSame('2020-02-29', 'day')).toBe(true);\n\n  rerender({\n    visibleDate: '2020-02-01',\n  });\n\n  expect(result.current.month.current.start.isSame('2020-02-01', 'day')).toBe(true);\n  expect(result.current.month.current.end.isSame('2020-02-29', 'day')).toBe(true);\n  expect(result.current.month.last.start.isSame('2020-01-01', 'day')).toBe(true);\n  expect(result.current.month.last.end.isSame('2020-01-31', 'day')).toBe(true);\n  expect(result.current.month.next.start.isSame('2020-03-01', 'day')).toBe(true);\n\n  // console.log(result.current.month.next.end.format());\n  expect(result.current.month.next.end.isSame('2020-03-31', 'day')).toBe(true);\n});\n"]}