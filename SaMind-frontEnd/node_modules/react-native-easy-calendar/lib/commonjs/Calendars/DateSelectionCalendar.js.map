{"version":3,"sources":["DateSelectionCalendar.tsx"],"names":["dayjs","extend","utc","DateSelectionCalendar","onSelectDate","disabledDates","selectedDate","initVisibleDate","allowYearView","others","Error","dateProperties","disabledDateProperties","selectedDateProperties","reduce","disabled","date","isDisabled","isValid","local","format","isSelected","undefined"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;AAGAA,eAAMC,MAAN,CAAaC,YAAb;;AASA;AACA,MAAMC,qBAAsC,GAAG,CAAC;AAC9CC,EAAAA,YAD8C;AAE9CC,EAAAA,aAF8C;AAG9CC,EAAAA,YAH8C;AAI9CC,EAAAA,eAJ8C;AAK9CC,EAAAA,aAAa,GAAG,IAL8B;AAM9C,KAAGC;AAN2C,CAAD,KAOzC;AACJ,MAAI,CAACH,YAAL,EAAmB;AACjB,UAAM,IAAII,KAAJ,CACJ,yFADI,CAAN;AAGD;;AAED,MAAI,OAAOJ,YAAP,KAAwB,QAA5B,EAAsC;AACpC,UAAM,IAAII,KAAJ,CACJ,uEADI,CAAN;AAGD;;AAED,MAAI,CAACN,YAAL,EAAmB;AACjB,UAAM,IAAIM,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,MAAI,OAAON,YAAP,KAAwB,UAA5B,EAAwC;AACtC,UAAM,IAAIM,KAAJ,CACJ,sFADI,CAAN;AAGD;;AAED,QAAMC,cAAc,GAAG,oBAAQ,MAAM;AACnC,QAAIC,sBAAsD,GAAG,EAA7D;AACA,QAAIC,sBAAsD,GAAG,EAA7D;AAEAD,IAAAA,sBAAsB,GAAIP,aAAJ,aAAIA,aAAJ,uBAAIA,aAAD,CAA6BS,MAA7B,CACvB,CAACC,QAAD,EAA2CC,IAA3C,KAAoD;AAClDD,MAAAA,QAAQ,CAACC,IAAD,CAAR,GAAiB;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAjB;AACA,aAAOF,QAAP;AACD,KAJsB,EAKvB,EALuB,CAAzB;;AAQA,QAAI,oBAAMT,YAAN,EAAoBY,OAApB,EAAJ,EAAmC;AACjCL,MAAAA,sBAAsB,GAAG;AACvB,SAAC,oBAAMP,YAAN,EAAoBa,KAApB,GAA4BC,MAA5B,CAAmC,YAAnC,CAAD,GAAoD;AAClDC,UAAAA,UAAU,EAAE;AADsC;AAD7B,OAAzB;AAKD,KAlBkC,CAoBnC;;;AACA,WAAO,EACL,GAAGT,sBADE;AAEL,SAAGC;AAFE,KAAP;AAID,GAzBsB,EAyBpB,CAACP,YAAD,EAAeD,aAAf,CAzBoB,CAAvB;AA2BA,sBACE,6BAAC,kBAAD;AACE,IAAA,aAAa,EAAEG,aADjB;AAEE,IAAA,UAAU,EAAEJ,YAFd;AAGE,IAAA,eAAe,EACbG,eAAe,KAAK,oBAAMD,YAAN,EAAoBY,OAApB,KAAgCZ,YAAhC,GAA+CgB,SAApD,CAJnB;AAME,IAAA,cAAc,EAAEX;AANlB,KAOMF,MAPN,EADF;AAWD,CApED;;eAsEeN,qB","sourcesContent":["import React, { useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\n\nimport BaseCalendarWrappedInProviders from './Providers';\nimport type { DateProperties, WrapperCalendarProps } from '../Entities';\n\ndayjs.extend(utc);\n\ninterface SpecificProps {\n  onSelectDate: (date: string) => void;\n  selectedDate: string;\n}\n\ntype Props = SpecificProps & WrapperCalendarProps;\n\n// A thin wrapper to limit the props that can be passed to the BaseCalendar component\nconst DateSelectionCalendar: React.FC<Props> = ({\n  onSelectDate,\n  disabledDates,\n  selectedDate,\n  initVisibleDate,\n  allowYearView = true,\n  ...others\n}) => {\n  if (!selectedDate) {\n    throw new Error(\n      'The `selectedDate` prop is required. Use an empty array if no dates should be selected.'\n    );\n  }\n\n  if (typeof selectedDate !== 'string') {\n    throw new Error(\n      'The `selectedDate` prop should be a date string in YYYY-MM-DD format.'\n    );\n  }\n\n  if (!onSelectDate) {\n    throw new Error('The `onSelectDate` prop is required.');\n  }\n\n  if (typeof onSelectDate !== 'function') {\n    throw new Error(\n      'The `onSelectDate` prop should be function that receives a date string as paramater.'\n    );\n  }\n\n  const dateProperties = useMemo(() => {\n    let disabledDateProperties: Record<string, DateProperties> = {};\n    let selectedDateProperties: Record<string, DateProperties> = {};\n\n    disabledDateProperties = (disabledDates as string[])?.reduce(\n      (disabled: Record<string, DateProperties>, date) => {\n        disabled[date] = { isDisabled: true };\n        return disabled;\n      },\n      {}\n    );\n\n    if (dayjs(selectedDate).isValid()) {\n      selectedDateProperties = {\n        [dayjs(selectedDate).local().format('YYYY-MM-DD')]: {\n          isSelected: true,\n        },\n      };\n    }\n\n    // Not possible for a date to be both disabled and selected, so overwriting is OK\n    return {\n      ...disabledDateProperties,\n      ...selectedDateProperties,\n    };\n  }, [selectedDate, disabledDates]);\n\n  return (\n    <BaseCalendarWrappedInProviders\n      allowYearView={allowYearView}\n      onPressDay={onSelectDate}\n      initVisibleDate={\n        initVisibleDate || (dayjs(selectedDate).isValid() ? selectedDate : undefined)\n      }\n      dateProperties={dateProperties}\n      {...others}\n    />\n  );\n};\n\nexport default DateSelectionCalendar;\n"]}