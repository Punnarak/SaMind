{"version":3,"sources":["Providers.tsx"],"names":["Providers","theme","locale","otherProps","DefaultLocale","DefaultTheme","React","memo"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAGA;;;;AASA,MAAMA,SAA0B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiB,KAAGC;AAApB,CAAD,KAAsC;AACvE,sBACE,6BAAC,uBAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAED,MAAF,aAAEA,MAAF,cAAEA,MAAF,GAAYE;AAAzC,kBACE,6BAAC,sBAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEH,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAWI;AAAvC,kBACE,6BAAC,qBAAD,EAAkBF,UAAlB,CADF,CADF,CADF;AAOD,CARD;;4BAUeG,eAAMC,IAAN,CAAWP,SAAX,C","sourcesContent":["import React from 'react';\n\nimport { ThemeContext, LocaleContext } from '../Contexts';\nimport { DefaultTheme } from '../Themes';\nimport { DefaultLocale } from '../Locales';\nimport type { Theme, Locale } from '../Entities';\n\nimport BaseCalendar, { Props as BaseCalendarProps } from './BaseCalendar';\n\ninterface ProviderProps {\n  locale?: Locale;\n  theme?: Theme;\n}\n\ntype Props = ProviderProps & BaseCalendarProps;\n\nconst Providers: React.FC<Props> = ({ theme, locale, ...otherProps }) => {\n  return (\n    <LocaleContext.Provider value={locale ?? DefaultLocale}>\n      <ThemeContext.Provider value={theme ?? DefaultTheme}>\n        <BaseCalendar {...otherProps} />\n      </ThemeContext.Provider>\n    </LocaleContext.Provider>\n  );\n};\n\nexport default React.memo(Providers);\n"]}